# JaCoCo
# http://www.jacoco.org/jacoco/trunk/doc/maven.html
#
# codacy-coverage-reporter
# https://github.com/codacy/codacy-coverage-reporter
#
# Travis
# https://docs.travis-ci.com/user/customizing-the-build
#
language: java
jdk:
  - oraclejdk9
before_install:
  - sudo apt-get install jq
# See: https://github.com/codacy/codacy-coverage-reporter#setup
# The following command download the LATEST version of "codacy-coverage-reporter" which throws the "NoClassDefFoundError" error when running CodacyCoverageReporter
# - wget -O ~/codacy-coverage-reporter-assembly-latest.jar $(curl https://api.github.com/repos/codacy/codacy-coverage-reporter/releases/latest | jq -r .assets[0].browser_download_url)
# The old version:
# - wget https://github.com/codacy/codacy-coverage-reporter/releases/download/1.0.13/codacy-coverage-reporter-1.0.13-assembly.jar -O ~/codacy-coverage-reporter-assembly-latest.jar
# The last donwloadable version:
  - wget https://github.com/codacy/codacy-coverage-reporter/releases/download/11.2.4/codacy-coverage-reporter-assembly-11.2.4.jar -O ~/codacy-coverage-reporter-assembly-latest.jar
install: true # Skip the installation step entirely.
              # Note that the install step runs before script step, and with Maven you don't usually need the install step. 
              # Maven will download dependencies on script step anyway.
script:
  - echo 'Running maven...'
  - echo ${JAVA_HOME}
  # Se non configuro correttamente i certificati, maven potrebbe restituire errore quando tenta di scaricare alcune dipendenze
  - ls -la ${JAVA_HOME}/lib/security
  - mv "${JAVA_HOME}/lib/security/cacerts" "${JAVA_HOME}/lib/security/cacerts.jdk"
  - ln -s /etc/ssl/certs/java/cacerts "${JAVA_HOME}/lib/security/cacerts"
  #
  - mvn -v  
  - mvn clean verify
  - mvn install
after_success:
# See: https://github.com/codacy/codacy-coverage-reporter#setup
# - export CODACY_PROJECT_TOKEN=%Project_Token%
  - echo 'Running codacy-coverage-reporter...'
  - java -cp ~/codacy-coverage-reporter-assembly-latest.jar com.codacy.CodacyCoverageReporter -l Java -r ./target/site/jacoco/jacoco.xml --projectToken $CODACY_PROJECT_TOKEN
#
# In alternativa a "codacy-coverage-reporter" Ã¨ possibile utilizzare il seguente plugin Maven
# See: https://github.com/halkeye/codacy-maven-plugin
# after_success: 
#   - mvn com.gavinmogan:codacy-maven-plugin:coverage -DcoverageReportFile=./target/site/jacoco/jacoco.xml -DprojectToken=$CODACY_PROJECT_TOKEN -DapiToken=$CODACY_API_TOKEN
